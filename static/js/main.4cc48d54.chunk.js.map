{"version":3,"sources":["StreamAndChat.js","InformationCards.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StreamAndChat","channel","id","theme","muted","onVideoPlay","document","title","InformationCards","Container","fluid","className","Row","xl","lg","md","sm","xs","Footer","url","fgColor","bgColor","App","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAeeA,EAZO,WAClB,OACI,cAAC,IAAD,CACIC,QAAQ,YACRC,GAAG,0BACHC,MAAM,OACNC,OAAK,EACLC,YAAa,kBAAMC,SAASC,MAAQ,yBCKjCC,G,kBAVU,WACrB,OACI,cAACC,EAAA,EAAD,CAAWC,MAAM,KAAKC,UAAU,2BAAhC,SACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGN,UAAU,+B,OCc/CO,G,MAjBA,WACX,OACI,iCACI,cAACT,EAAA,EAAD,CAAWC,MAAM,KAAKC,UAAU,2BAAhC,SACI,eAACC,EAAA,EAAD,CAAKD,UAAU,yBAAf,UACI,cAAC,aAAD,CAAYQ,IAAI,gCAAgCR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,YACjG,cAAC,aAAD,CAAYF,IAAI,gCAAgCR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,YACjG,cAAC,aAAD,CAAYF,IAAI,6CAA6CR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,YAC9G,cAAC,aAAD,CAAYF,IAAI,2DAA2DR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,YAC5H,cAAC,aAAD,CAAYF,IAAI,2DAA2DR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,YAC5H,cAAC,aAAD,CAAYF,IAAI,4CAA4CR,UAAU,gBAAgBS,QAAQ,OAAOC,QAAQ,qBCgBlHC,MAzBf,WACI,OACI,qCACI,yBAASpB,GAAG,UAAZ,SACI,eAACO,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACI,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACI,cAACM,EAAA,EAAD,UACI,oBAAIrB,GAAG,gBAAgBS,UAAU,cAAjC,gCAKR,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACI,cAACM,EAAA,EAAD,UACI,cAAC,EAAD,aAKhB,cAAC,EAAD,IACA,cAAC,EAAD,QCdGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.4cc48d54.chunk.js","sourcesContent":["import React from 'react';\r\nimport { TwitchEmbed } from 'react-twitch-embed';\r\n\r\nconst StreamAndChat = () => {\r\n    return (\r\n        <TwitchEmbed\r\n            channel=\"RennPlayz\"\r\n            id=\"RennPlayz-StreamAndChat\"\r\n            theme=\"dark\"\r\n            muted\r\n            onVideoPlay={() => document.title = 'RennPlayz is LIVE!'}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StreamAndChat;","import React from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport SocialCard from \"./SocialCard\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst InformationCards = () => {\n    return (\n        <Container fluid=\"xl\" className=\"margin-top margin-bottom\">\n            <Row xl={3} lg={3} md={3} sm={2} xs={2} className=\"justify-content-center\">\n                {/*<Col><SocialCard /></Col>*/}\n            </Row>\n        </Container>\n    );\n};\n\nexport default InformationCards;","import React from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport './style/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container fluid=\"xl\" className=\"margin-top margin-bottom\">\r\n                <Row className=\"justify-content-center\">\r\n                    <SocialIcon url=\"https://discord.gg/2HhHrN4CzT\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                    <SocialIcon url=\"https://twitter.com/RennPlayz\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                    <SocialIcon url=\"https://www.instagram.com/rennplayz/?hl=en\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                    <SocialIcon url=\"https://www.youtube.com/channel/UCvt3gsczC5khNmP-R8oQAEw\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                    <SocialIcon url=\"https://www.youtube.com/channel/UCBMfPOgGJGy_dwr3vFHUFIg\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                    <SocialIcon url=\"https://www.tiktok.com/@rennplayz?lang=en\" className=\"footer-social\" fgColor=\"#fff\" bgColor=\"#ff94eb\"/>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import './style/App.css'\nimport { Container, Row, Col} from 'react-bootstrap';\nimport StreamAndChat from './StreamAndChat';\nimport InformationCards from './InformationCards';\nimport Footer from \"./Footer\";\n\nfunction App() {\n    return (\n        <>\n            <section id=\"landing\">\n                <Container fluid=\"xl\">\n                    <Row xl={1} lg={1} md={1} sm={1} xs={1}>\n                        <Col>\n                            <h1 id=\"welcome-title\" className=\"text-center\">\n                                Welcome Gamers\n                            </h1>\n                        </Col>\n                    </Row>\n                    <Row xl={1} lg={1} md={1} sm={1} xs={1}>\n                        <Col>\n                            <StreamAndChat/>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            <InformationCards />\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}